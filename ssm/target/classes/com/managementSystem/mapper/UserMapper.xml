<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.managementSystem.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.managementSystem.pojo.User">
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="GENDER" jdbcType="VARCHAR" property="gender" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="FIRST_LOGIN" jdbcType="INTEGER" property="firstLogin" />
  </resultMap>
  <resultMap id="WithRoleResultMap" type="com.managementSystem.pojo.User">
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="GENDER" jdbcType="VARCHAR" property="gender" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="FIRST_LOGIN" jdbcType="INTEGER" property="firstLogin" />
    <association property="role" javaType="com.managementSystem.pojo.Role">
      <id column="ROLE_ID" property="roleId"/>
      <result column="NAME" property="name"/>
      <result column="DESCRIPTION" property="description"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER_ID, ROLE_ID, PASSWORD, USER_NAME, GENDER, EMAIL, FIRST_LOGIN
  </sql>
  <sql id="WithRole_Column_List">
    u.USER_ID, u.ROLE_ID, u.PASSWORD, u.USER_NAME, u.GENDER, u.EMAIL, u.FIRST_LOGIN, r.ROLE_ID, r.NAME, r.DESCRIPTION
  </sql>
  <select id="selectByExample" parameterType="com.managementSystem.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.managementSystem.pojo.UserExample">
    delete from user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.managementSystem.pojo.User">
    insert into user_role (USER_ID, ROLE_ID, PASSWORD, 
      USER_NAME, GENDER, EMAIL, 
      FIRST_LOGIN)
    values (#{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{firstLogin,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.managementSystem.pojo.User">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="gender != null">
        GENDER,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="firstLogin != null">
        FIRST_LOGIN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="firstLogin != null">
        #{firstLogin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.managementSystem.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_role
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        GENDER = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.firstLogin != null">
        FIRST_LOGIN = #{record.firstLogin,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_role
    set USER_ID = #{record.userId,jdbcType=VARCHAR},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      GENDER = #{record.gender,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      FIRST_LOGIN = #{record.firstLogin,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.managementSystem.pojo.User">
    update user_role
    <set>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        GENDER = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="firstLogin != null">
        FIRST_LOGIN = #{firstLogin,jdbcType=INTEGER},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.managementSystem.pojo.User">
    update user_role
    set ROLE_ID = #{roleId,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      GENDER = #{gender,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      FIRST_LOGIN = #{firstLogin,jdbcType=INTEGER}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRole" resultMap="WithRoleResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithRole_Column_List" />
    from user_role u join role r on u.ROLE_ID = r.ROLE_ID
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithRole" resultMap="WithRoleResultMap">
    select
    <include refid="WithRole_Column_List" />
    from user_role u join role r on u.ROLE_ID = r.ROLE_ID
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
</mapper>